plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidbuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled = true
    }
}

dependencies {
//    def lifecycle_version = "2.4.0-rc01"
//    def arch_version = "2.1.0"
//
//    // ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
//    // LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
//    // Lifecycles only (without ViewModel or LiveData)
//    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
//
//    // Saved state module for ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
//
//    // Annotation processor
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - helpers for implementing LifecycleOwner in a Service
//    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
//
//    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
//    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
//
//    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$arch_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    api 'org.greenrobot:eventbus:3.1.1'


    //jetpack
//    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
//    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"

}